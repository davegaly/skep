// logic delete
async function ##functionName##(params) {
    logger.log("##tableName##Provider->##functionName## Started: " + JSON.stringify(params));
    try {
        const db = await new sqlite3.Database(dbHelper.ReturnDBPath());
        if (params.guid != null && params.guid !== '') {
            await new Promise((resolve, reject) => {
                db.serialize(() => {
                    logger.log("##tableName##Provider->##functionName##(logic delete) Started");

                    db.prepare(`UPDATE ##tableName## SET isDeleted=1 WHERE guid=?`, [params.guid])
                      .run((err) => {
                          if (err) {
                              logger.error(err.message);
                              return reject(err);
                          }
                      })
                      .finalize((err) => {
                          if (err) {
                              logger.error(err.message);
                              return reject(err);
                          }
                          resolve();
                      });
                });
            });
            db.close();
            logger.log("##tableName##Provider->##functionName##(logic delete) Finished");
            return "ok";
        } else {
            throw new Error("Invalid GUID");
        }
    } catch (error) {
        logger.error("##tableName##Provider->##functionName## error: " + error.message);
        throw error;
    }
}
